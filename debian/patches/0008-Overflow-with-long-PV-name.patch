From: "Martins, Bruno" <bmartins@bnl.gov>
Date: Tue, 15 Mar 2016 09:44:48 -0400
Subject: Overflow with long PV name

When StreamProtocolParser::Protocol::compileFormat finds a
%(other_pv)d format specifier it calls Stream::getFieldAddress.

getFieldAddress will first try to interpret other_pv as a field name
checking for the existence of this_pv.other_pv. If it doesn't find
such PV it will then assume the format points to other_pv.VAL.

If both this_pv and other_pv have long names they will cause an
overflow on the buffer fullname, which has a size of PVNAME_SZ+1 = 61.

This fix replaces sprintf calls with snprintf within Stream::getFieldAddress.

https://github.com/epics-modules/stream/pull/2
---
 src/StreamEpics.cc | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/StreamEpics.cc b/src/StreamEpics.cc
index d38bb0d..e395aab 100644
--- a/src/StreamEpics.cc
+++ b/src/StreamEpics.cc
@@ -62,6 +62,7 @@ extern DBBASE *pdbbase;
 #include <epicsThread.h>
 #include <registryFunction.h>
 #include <iocsh.h>
+#include <epicsStdio.h>
 
 #if EPICS_MODIFICATION<9
 extern "C" {
@@ -941,12 +942,13 @@ getFieldAddress(const char* fieldname, StreamBuffer& address)
     else
     {
         // FIELD in this record or VAL in other record
-        char fullname[PVNAME_SZ + 1];
-        sprintf(fullname, "%s.%s", name(), fieldname);
+        char fullname[PVNAME_SZ + 6];
+        const size_t fullnameLen = sizeof(fullname);
+        epicsSnprintf(fullname, fullnameLen, "%s.%s", name(), fieldname);
         if (dbNameToAddr(fullname, &dbaddr) != OK)
         {
             // VAL in other record
-            sprintf(fullname, "%s.VAL", fieldname);
+            epicsSnprintf(fullname, fullnameLen, "%s.VAL", fieldname);
             if (dbNameToAddr(fullname, &dbaddr) != OK) return false;
         }
     }
